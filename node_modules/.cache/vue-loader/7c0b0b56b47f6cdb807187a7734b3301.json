{"remainingRequest":"/Users/news/Desktop/topicarea/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/news/Desktop/topicarea/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/news/Desktop/topicarea/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/topicarea/src/components/Banner.vue?vue&type=template&id=a2fea148&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/topicarea/src/components/Banner.vue","mtime":1660903751700},{"path":"/Users/news/Desktop/topicarea/node_modules/cache-loader/dist/cjs.js","mtime":1644917916560},{"path":"/Users/news/Desktop/topicarea/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644917918092},{"path":"/Users/news/Desktop/topicarea/node_modules/cache-loader/dist/cjs.js","mtime":1644917916560},{"path":"/Users/news/Desktop/topicarea/node_modules/vue-loader/lib/index.js","mtime":1644917917658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}